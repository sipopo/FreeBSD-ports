diff --git a/config/config-sample.ini b/config/config-sample.ini
index 1f17290..d600cf1 100644
--- a/config/config-sample.ini
+++ b/config/config-sample.ini
@@ -11,6 +11,9 @@ footer = 'Developed by <a href="https://www.opera.com/">Opera Software</a>.'
 ;force_change_review = 1
 ; Enable this option if you want all users to be forced to enter a comment for every change made.
 ;force_change_comment = 1
+; Enable this option if you want comment has specific tag in change comment, and resource record comment has the same value.
+; You shoud implement function get_tag_comment($login) and place it in ./extensions
+;force_tag_comment = 1
 
 [email]
 enabled = 1
diff --git a/model/zone.php b/model/zone.php
index 79bf818..7561625 100644
--- a/model/zone.php
+++ b/model/zone.php
@@ -666,9 +666,14 @@ class Zone extends Record {
 		if(is_null($update)) throw new InvalidJSON(json_last_error_msg());
 		if(!isset($update->actions) && !is_array($update->actions)) throw new BadData('No actions provided.');
 		if(isset($config['web']['force_change_comment']) && intval($config['web']['force_change_comment']) == 1 && empty($update->comment)) throw new BadData('A change comment must be provided.');
+
 		foreach($update->actions as $action) {
 			try {
-				$changes[] = $this->process_rrset_action($action, $trash, $revs_missing, $revs_updated);
+				if(isset($config['web']['force_tag_comment']) && intval($config['web']['force_tag_comment']) == 1) {
+					$changes[] = $this->process_rrset_action($action, $trash, $revs_missing, $revs_updated, $update->comment);
+				} else {
+					$changes[] = $this->process_rrset_action($action, $trash, $revs_missing, $revs_updated);
+				}
 			} catch(RuntimeException $e) {
 				$errors[] = $e->getMessage();
 			}
@@ -720,7 +725,7 @@ class Zone extends Record {
 	* @param array $revs_missing keep track of reverse zones that are missing
 	* @param array $revs_updated keep track of reverse zones that will be updated
 	*/
-	private function process_rrset_action($update, &$trash, &$revs_missing, &$revs_updated) {
+	private function process_rrset_action($update, &$trash, &$revs_missing, &$revs_updated, $change_comment=NULL) {
 		global $active_user, $config, $zone_dir;
 		if(!is_object($update)) throw new BadData('Malformed update.');
 		if(!(isset($update->name) && isset($update->type))) throw new BadData('Malformed action.');
@@ -766,7 +771,12 @@ class Zone extends Record {
 			}
 			if(isset($update->comment)) {
 				$comment = new Comment;
-				$comment->content = $update->comment;
+				if(isset($change_comment)) {
+					$tag_comment = get_tag_comment($active_user->uid);
+					$comment->content = $tag_comment.$change_comment;
+				} else {
+					$comment->content = $update->comment;
+				}
 				$comment->account = $active_user->uid;
 				$rrset->add_comment($comment);
 			}
@@ -803,10 +813,16 @@ class Zone extends Record {
 				}
 				$rrset->add_resource_record($rr);
 			}
-			if(isset($update->comment) && $update->comment != $rrset->merge_comment_text()) {
+
+			if( (isset($update->comment) && $update->comment != $rrset->merge_comment_text()) || isset($change_comment) ) {
 				$rrset->clear_comments();
 				$comment = new Comment;
-				$comment->content = $update->comment;
+				if(isset($change_comment)) {
+					$tag_comment = get_tag_comment($active_user->uid);
+					$comment->content = $tag_comment.$change_comment;
+				} else {
+					$comment->content = $update->comment;
+				}
 				$comment->account = $active_user->uid;
 				$rrset->add_comment($comment);
 			}
